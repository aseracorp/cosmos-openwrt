name: Build OpenWrt Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'OpenWrt version (e.g., 24.10.2)'
        required: true
        type: string
        default: '24.10.2'
      target:
        description: 'Target architecture (e.g., bcm27xx-bcm2711)'
        required: true
        type: string
        default: 'bcm27xx-bcm2711'
      profile:
        description: 'Device profile (e.g., rpi-4)'
        required: true
        type: string
        default: 'rpi-4'
      packages:
        description: 'Additional packages to include (space-separated)'
        required: false
        type: string
        default: 'tailscale luci-ssl fdisk parted kmod-fs-btrfs btrfs-progs block-mount chattr docker dockerd luci-app-dockerman luci-app-uhttpd attendedsysupgrade-common luci-app-attendedsysupgrade kmod-usb-acm avahi-daemon bash'
      files:
        description: 'Folder with additional files (f.e. files/etc/uci-defaults)'
        required: false
        type: string
        default: 'files'
      rootfs_partsize:
        description: 'OpenWRT Root-Filesystem Partition size (e.g. 896)'
        required: false
        type: string
        default: '896'
      ssh-key:
        description: 'Add authorized SSH-Key'
        required: false
        type: string
        default: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGWOSY2frpHkUagJB4ZFtK4aLkLUUkdSP6nAYl4h+/QJ eddsa-key-20240826'


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build OpenWrt image
        run: |
          docker build --build-arg version=${{ github.event.inputs.version }} \
                      --build-arg target=${{ github.event.inputs.target }} \
                      --build-arg profile=${{ github.event.inputs.profile }} \
                      --build-arg packages="${{ github.event.inputs.packages }}" \
                      --build-arg files="${{ github.event.inputs.files }}" \
                      --build-arg rootfs_partsize="${{ github.event.inputs.rootfs_partsize }}" \
                      -t openwrt-builder .

      - name: Copy artifacts from container
        run: |
          container_id=$(docker create openwrt-builder)
          docker cp $container_id:/openwrt/openwrt-imagebuilder/bin .
          docker rm $container_id

      - id: targetpath
        uses: frabert/replace-string-action@v2
        with:
          pattern: '-'
          string: ${{ format(github.event.inputs.target) }}
          replace-with: '/'

      - name: Upload factory image
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-${{ github.event.inputs.version }}-${{ github.event.inputs.target }}-${{ github.event.inputs.profile }}-squashfs-factory
          path: bin/targets/${{ steps.targetpath.outputs.replaced }}/openwrt-${{ github.event.inputs.version }}-${{ github.event.inputs.target }}-${{ github.event.inputs.profile }}-squashfs-factory.img.gz
          retention-days: 7
          compression-level: 0 # no compression

      - name: Upload sysupgrade image
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-${{ github.event.inputs.version }}-${{ github.event.inputs.target }}-${{ github.event.inputs.profile }}-squashfs-sysupgrade
          path: bin/targets/${{ steps.targetpath.outputs.replaced }}/openwrt-${{ github.event.inputs.version }}-${{ github.event.inputs.target }}-${{ github.event.inputs.profile }}-squashfs-sysupgrade.img.gz
          retention-days: 7
          compression-level: 0 # no compression